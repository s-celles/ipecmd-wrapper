[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ipecmd-wrapper"
version = "0.1.0"
description = "IPECMD Wrapper for PIC Microcontrollers Programming"
authors = [
    {name = "SÃ©bastien Celles", email = "s.celles@gmail.com"}
]
license = "MIT"
readme = "README.md"
requires-python = ">=3.9"
keywords = ["ipecmd", "pic", "microcontroller", "programming", "embedded", "pickit"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Build Tools",
    "Topic :: Software Development :: Embedded Systems",
    "Topic :: System :: Hardware",
]
dependencies = [
    "colorama>=0.4.4",
    "logbook>=1.5.3",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-xdist>=3.0",
    "ruff==0.12.3",
    "mypy>=0.910",
    "pre-commit>=2.20",
    "coverage>=6.0",
    "bandit>=1.7",
    "safety>=2.0",
    "commitizen>=3.0",
    # Ensure we have proper packaging tools for all platforms
    "setuptools>=45",
    "wheel>=0.37",
]
docs = [
    "mkdocs>=1.4",
    "mkdocs-material>=8.0",
    "mkdocs-git-revision-date-localized-plugin>=1.0",
]

[project.urls]
Homepage = "https://s-celles.github.io/ipecmd-wrapper/"
Documentation = "https://s-celles.github.io/ipecmd-wrapper/"
Repository = "https://github.com/s-celles/ipecmd-wrapper"
Issues = "https://github.com/s-celles/ipecmd-wrapper/issues"
Changelog = "https://s-celles.github.io/ipecmd-wrapper/changelog/"

[project.scripts]
ipecmd-wrapper = "ipecmd_wrapper.cli:main"

[tool.setuptools.packages.find]
where = ["."]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=ipecmd_wrapper",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=75",
]
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "cli: marks tests as CLI tests",
    "core: marks tests as core functionality tests",
    "performance: marks tests as performance tests",
    "compatibility: marks tests as compatibility tests",
]

[tool.coverage.run]
source = ["ipecmd_wrapper"]
omit = [
    "tests/*",
    "*/__pycache__/*",
    "*/site-packages/*",
    "setup_dev.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "S",   # flake8-bandit
]
ignore = [
    "E203",  # whitespace before ':'
]
per-file-ignores = {"tests/*" = ["S101"], "setup_dev.py" = ["S404", "S602", "S607"], "run_tests.py" = ["S603"], "ipecmd_wrapper/*.py" = ["S603"]}

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
version_scheme = "pep440"
version_provider = "pep621"
update_changelog_on_bump = true
major_version_zero = true
